{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","form_delay","form_step","form_amount","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Submit","event","preventDefault","Number","value","amount","step","counter","then","console","log","catch","addEventListener"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAI3C,SAASI,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACrBC,IAAAA,EAAgBC,KAAKC,SAAW,GAEtCC,WAAW,WACLH,EACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,KAEpBA,KAIP,SAASQ,EAAOC,GACdA,EAAMC,iBAOC,IALHV,IAAAA,EAAQW,OAAOhB,EAAWiB,OAC1BC,EAASF,OAAOd,EAAYe,OAC5BE,EAAOH,OAAOf,EAAUgB,OACxBG,EAAU,IAELA,GAAWF,GAClBf,EAAciB,EAASf,GACpBgB,KAAK,SAAyB,GAAtBjB,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,MACjBiB,QAAQC,IAA2BnB,uBAAAA,OAAAA,EAAeC,QAAAA,OAAAA,EAAlD,SAEDmB,MAAM,SAAyB,GAAtBpB,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,MAClBiB,QAAQC,IAA0BnB,sBAAAA,OAAAA,EAAeC,QAAAA,OAAAA,EAAjD,SAEJA,GAASc,EAhCbtB,EAAK4B,iBAAiB,SAAUZ","file":"03-promises.55117624.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\nconst form_delay = document.querySelector('[name = delay]');\nconst form_step = document.querySelector('[name = step]');\nconst form_amount = document.querySelector('[name = amount]');\n\nform.addEventListener('submit', Submit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction Submit(event) {\n  event.preventDefault();\n\n  let delay = Number(form_delay.value);\n  let amount = Number(form_amount.value);\n  let step = Number(form_step.value);\n  let counter = 0;\n\n  while (++counter <= amount) {\n    createPromise(counter, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"]}